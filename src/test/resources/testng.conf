net {
  type = mainnet
  #type = testnet
}
node {
  # You can custom this configs:
  # There are two types of nodes in the GSC network, namely fullnode, and confirmed node.
  # fullnode: the fullnode provides the api, the broadcast transaction and the block, and also responsible for the production block;
  # confirmed: the confirmed node synchronizes the non-returnable block and provides the query api.

  # fullnode: 0 (set by yourself), confirmed: 1
  type = 0
}
fullnode = {
  ip.list = [
    #Continue Integration
    "127.0.0.1:50051",
  ]
}

checkfullnode = {
  ip.list = [
    "127.0.0.1:50051"
  ]
}

CityDb = {
  TxtPath = "City.txt"
  DbPath = "City.mmdb"
}


grpc {
  checkaddress = "127.0.0.1:50051"
}

storage {
  # Directory for storing persistent data
  directory = "database"
}

node.discovery = {
  enable = true
  persist = true
  bind.ip = "127.0.0.1"
  external.ip = null
}

node {
  listen.port = 18888

  connection.timeout = 2

  active = [
    # Sample entries:
    # { url = "enode://<hex nodeID>@hostname.com:30303" }
    # {
    #    ip = hostname.com
    #    port = 30303
    #    nodeId = e437a4836b77ad9d9ffe73ee782ef2614e6d8370fcf62191a6e488276e23717147073a7ce0b444d485fff5a0c34c4577251a7a990cf80d8542e21b95aa8c5e6c
    # }
  ]

  maxActiveNodes = 30

  p2p {
    version = 333 # 333: mainnet; 20181225: testnet
  }

  rpc {
    port = 50051

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum p2p size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =
  }

}

sync {
  node.count = 30
}

seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "127.0.0.1:18889",
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "GSCFoundation"
      accountType = "AssetIssue"
      address = "26TKRQ4CgeUYHYYAu8Hh1ex9bEBaCvSqf4w"
      balance = "10000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "26RqzxTY2EJ7EHwNNhHg2GUU1ppn5imcFXM"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: 26d5g9K7UQyrmGrZBBNBBVGjyyiwCcg3WFw
      # 090a5d6b42adb2fb0681bd51cb91df42ebdabdf789f9a4f5db4f542ddc31b320
      url = "http://gsc5.org",
      voteCount = 1005
    },
    {
      address: 26MTBUYEtvDTA5SkNXraJ4npZTuNDxhDNoK
      url = "http://gsc4.org",
      voteCount = 1004
    },
    {
      address: 26TPqhKFSd7qjCNGCpi3LWkUUGrLBzV57B8
      url = "http://gsc3.org",
      voteCount = 1003
    },
    {
      address: 26NgR2uZ1Ybbu7rzvCzQt8FGJL58PZH8Y6x
      url = "http://gsc2.org",
      voteCount = 1002
    },
    {
      address: 26RiCfrMhJPWkAtUEmw1qiCoWUB4Jiq7eQL
      url = "http://gsc1.org",
      voteCount = 1001
    },
    {
      address: 26dDAjU3wEvnUjeWkSfNz6SvLDfzEs1CbYR
      url = "http://gsc.org",
      voteCount = 1000
    }
  ]

  timestamp = "0" #2018-12-25 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

localwitness = [
  090a5d6b42adb2fb0681bd51cb91df42ebdabdf789f9a4f5db4f542ddc31b320
]

block = {
  needSyncCheck = true # first node : false, other : true
}
