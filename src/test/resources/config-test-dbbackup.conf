node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null

  boot = [
    #   "ip:port",
    # "127.0.0.1:50505"
  ]
}

node {
  # trust node for confirmed node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:5021"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 50505

  connection.timeout = 2

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  connectFactor = 0.3
  activeConnectFactor = 0.1

  maxActiveNodes = 30

  maxActiveNodesWithSameIp = 2

  minParticipationRate = 15

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 1001 # 11111: mainnet; 20180622: testnet
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  backup {
    port = 5555

    # my priority, each member should use different priority
    priority = 8

    # peer's ip list, can't contain mine
    members = [
      # "ip",
      # "ip"
    ]
  }


  http {
    fullNodePort = 8090
    confirmedPort = 8091
  }

  rpc {
    port = 5021
    # confirmedPort = 5023
    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =
  }

  # Limits the maximum percentage (default 75%) of producing block interval
  # to provide sufficient time to perform other operations e.g. broadcast block
  # blockProducedTimeOut = 75

  # Limits the maximum number (default 700) of transaction from network layer
  # netMaxTrxPerSecond = 700

  # Transaction reference block, default is "latest", configure to "confirmed" can avoid TaPos error
  # trx.referenceBlock = "latest" // latest; confirmed;

}

sync = {

  enabled = true

  # node.count = 30
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine = "ROCKSDB",
  db.directory = "database",
  index.directory = "index",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "gsc_DB" or which is set by "-d" ("--db-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]

  needToUpdateAsset = true

  backup = {
    enable = true
    properties = "test_prop.properties"
    bak1path = "bak1/database"
    bak2path = "bak2/database"
    frequency = 10000 // backup db every ? blocks processed.
  }
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Dot"
      accountType = "AssetIssue"
      address = "GSCmtiNVfUJybdYRbfV98uytyD6DCCFn63ta"
      balance = "10000000000000000"
    },
    {
      accountName = "Dot2"
      accountType = "AssetIssue"
      address = "GSCbuT1GT3zpz9pYULLBfXgFBaZtF5MhxEkQ"
      balance = "15000000000000000"
    },
    {
      accountName = "Dot3"
      accountType = "AssetIssue"
      address = "GSCfPVfutRDeB5T3xaDsxYxASH6P8u7Ydsc3"
      balance = "10000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "GSCbF3bAiq8VRGpZutZhNL1sZdWAYF8HisaY"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      // 86721e81012ffc0ac54b0ffb6af4fe6a22ce5eebc89fefd1ca91d0d1f8ef85be
      address: GSCYSN4AvKfEbD87GHNiXNYaHnk7gZHrQMdy,
      // 01f80c63ab67ead97e4f48de58f76e3d32a72d5b774251
      url = "GSC1",
      voteCount = 1024
    },
    {
      // 809714cfc4005b1839babb988f8680cc2e6937e747c9d5461d8e065baa1260fb
      address: GSCPiT1JaGv5F8hvsezKJJp69CDC9yvRkCUx,
      // 01f80c03fd0fd06b10768f120cc5911194e35ed4d60195
      url = "GSC2",
      voteCount = 1025
    },
    {
      // 27216755ffd8726184b428971834df395030578461e7b5b3967b68697ca9925c
      // 01f80cebcd9b60d930b603a4fec7d188275c61e1676602
      address: GSCkrAvb8WUZbkfb18jMGU5ZtMwWpaWy8btK,
      url = "GSC3",
      voteCount = 1026
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"

  extraData = "In Us We Trust. 2018/12/25." #2017-8-26 12:00:00
}

witness = {
  # start mining blocks
  # when 'sync.enabled' is true the mining starts when the sync is complete
  # else the mining will start immediately, taking the best block from database
  # (or genesis if no blocks exist yet)
  mining = true

  // Optional.The default is empty.
  // It is used when the witness account has set the witnessPermission.
  // When it is not empty, the localWitnessAccountAddress represents the address of the witness account,
  // and the localwitness is configured with the private key of the witnessPermissionAddress in the witness account.
  // When it is empty,the localwitness is configured with the private key of the witness account.

  // address = 01f80c63ab67ead97e4f48de58f76e3d32a72d5b774251

  privateKey = [
    27216755ffd8726184b428971834df395030578461e7b5b3967b68697ca9925c
  ]

  # keystore = [
  #   "keystore.json"
  # ]

  # maintenanceTimeInterval = 21600000

  # proposalExpireTime = 259200000

  # extraData = "GSC Foundation"

  # Transaction reference block, default is "head", configure to "solid" can avoid TaPos error
  # trx.referenceBlock = "head" // head;solid;

  # This property sets the number of milliseconds after the creation of the transaction that is expired, default value is  60000.
  # trx.expirationTimeInMilliseconds = 60000

  # checkFrozenTime

  maintenanceTimeInterval = 21600000
  proposalExpireTime = 259200000 // 3 day: 259200000(ms)
}

committee = {
  allowCreationOfContracts = 0  //mainnet:0 (reset by committee),test:1
  allowAdaptiveCpu = 0  //mainnet:0 (reset by committee),test:1
}

vm = {
  supportConstant = false
  minTimeRatio = 0.0
  maxTimeRatio = 5.0

  # In rare cases, transactions that will be within the specified maximum execution time (default 10(ms)) are re-executed and packaged
  # longRunningTime = 10
}

log.level = {
  root = "INFO" // TRACE;DEBUG;INFO;WARN;ERROR
}
