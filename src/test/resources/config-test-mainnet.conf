net {
  type = mainnet
# type = testnet
}
node {
  # You can custom this configs:
  # There are two types of nodes in the GSC network, namely fullnode, and confirmed node.
  # fullnode: the fullnode provides the api, the broadcast transaction and the block, and also responsible for the production block;
  # confirmed: the confirmed node synchronizes the non-returnable block and provides the query api.

  # fullnode: 0 (set by yourself), confirmed: 1
  type = 0
}

storage {
  # Directory for storing persistent data

  db.directory = "database",
  index.directory = "index",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    {
      name = "account",
      path = "storage_directory_test",
      createIfMissing = true,
      paranoidChecks = true,
      verifyChecksums = true,
      compressionType = 1,        // compressed with snappy
      blockSize = 4096,           // 4  KB =         4 * 1024 B
      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
      maxOpenFiles = 100
    },
    {
      name = "account-index",
      path = "storage_directory_test",
      createIfMissing = true,
      paranoidChecks = true,
      verifyChecksums = true,
      compressionType = 1,        // compressed with snappy
      blockSize = 4096,           // 4  KB =         4 * 1024 B
      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
      maxOpenFiles = 100
    },
  ]

}

node.discovery = {
  enable = true
  persist = true
  bind.ip = "127.0.0.1"
  external.ip = null
}

node {

  trustNode = "127.0.0.1:50051"

  listen.port = 18888

  connection.timeout = 2

  active = [
    # Sample entries:
    # { url = "enode://<hex nodeID>@hostname.com:30303" }
    # {
    #    ip = hostname.com
    #    port = 30303
    #    nodeId = e437a4836b77ad9d9ffe73ee782ef2614e6d8370fcf62191a6e488276e23717147073a7ce0b444d485fff5a0c34c4577251a7a990cf80d8542e21b95aa8c5e6c
    # }
  ]

  maxActiveNodes = 30

  p2p {
    version = 333 # 333: mainnet; 20181225: testnet
  }

}

sync {
  node.count = 30
}

seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "47.74.225.234:19999",
    "47.74.14.144:19999",
    "47.254.71.98:19999",
    "47.93.247.72:19999"
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "GSCFoundation"
      accountType = "AssetIssue"
      address = "GTKRQ4CgeUYHYYAu8Hh1ex9bEBaCvSqf4w"
      balance = "10000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "GRqzxTY2EJ7EHwNNhHg2GUU1ppn5imcFXM"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: Gd5g9K7UQyrmGrZBBNBBVGjyyiwCcg3WFw
      url = "http://gsc5.org",
      voteCount = 1005
    },
    {
      address: GMTBUYEtvDTA5SkNXraJ4npZTuNDxhDNoK
      url = "http://gsc4.org",
      voteCount = 1004
    },
    {
      address: GTPqhKFSd7qjCNGCpi3LWkUUGrLBzV57B8
      url = "http://gsc3.org",
      voteCount = 1003
    },
    {
      address: GNgR2uZ1Ybbu7rzvCzQt8FGJL58PZH8Y6x
      url = "http://gsc2.org",
      voteCount = 1002
    },
    {
      address: GRiCfrMhJPWkAtUEmw1qiCoWUB4Jiq7eQL
      url = "http://gsc1.org",
      voteCount = 1001
    },
    {
      address: GdDAjU3wEvnUjeWkSfNz6SvLDfzEs1CbYR
      url = "http://gsc.org",
      voteCount = 1000
    }
  ]

  timestamp = "0" #2018-12-25 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

localwitness = [
  090a5d6b42adb2fb0681bd51cb91df42ebdabdf789f9a4f5db4f542ddc31b320
]
  block = {
    needSyncCheck = true # first node : false, other : true
  }
