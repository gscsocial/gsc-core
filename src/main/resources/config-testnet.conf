node.discovery = {
  enable = true

  persist = true

  bind.ip = "127.0.0.1"

  external.ip = null

  boot = [
    #   "ip:port",
    # "127.0.0.1:50505"
    "39.105.194.199:50505",
    "39.105.103.165:50505",
    "39.105.135.130:50505"
  ]

  # public.home.node
}

storage {
  # Directory for storing persistent data

  db.version = 2,
  db.engine = "ROCKSDB"
  db.directory = "database",
  index.directory = "index",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "gsc-db" or which is set by "-d" ("--db-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    { # only for unit test
    //      name = "test_name",
    //      path = "test_path",
    //      createIfMissing = false,
    //      paranoidChecks = false,
    //      verifyChecksums = false,
    //      compressionType = 1,
    //      blockSize = 2,
    //      writeBufferSize = 3,
    //      cacheSize = 4,
    //      maxOpenFiles = 5
    //    },
  ]

  needToUpdateAsset = false

}

node {

  listen.port = 50505

  p2p.version = 1002 #

  trustNode = "127.0.0.1:5021"

  connection.timeout = 2

  active = [
    # Sample entries:
    # { url = "enode://<hex nodeID>@hostname.com:30303" }
    # {
    #    ip = hostname.com
    #    port = 30303
    #    nodeId = e437a4836b77ad9d9ffe73ee782ef2614e6d8370fcf62191a6e488276e23717147073a7ce0b444d485fff5a0c34c4577251a7a990cf80d8542e21b95aa8c5e6c
    # }
  ]

  maxActiveNodes = 30

  rpc {
    port = 5021

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =
  }

}

sync {
  enabled = true

  node.count = 30
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Dot"
      accountType = "AssetIssue"
      address = "GSCmtiNVfUJybdYRbfV98uytyD6DCCFn63ta"
      balance = "10000000000000000"
    },
    {
      accountName = "Dot2"
      accountType = "AssetIssue"
      address = "GSCbuT1GT3zpz9pYULLBfXgFBaZtF5MhxEkQ"
      balance = "15000000000000000"
    },
    {
      accountName = "Dot3"
      accountType = "AssetIssue"
      address = "GSCfPVfutRDeB5T3xaDsxYxASH6P8u7Ydsc3"
      balance = "10000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "GSCbF3bAiq8VRGpZutZhNL1sZdWAYF8HisaY"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      // 86721e81012ffc0ac54b0ffb6af4fe6a22ce5eebc89fefd1ca91d0d1f8ef85be
      address: GSCYSN4AvKfEbD87GHNiXNYaHnk7gZHrQMdy,
      // 01f80c63ab67ead97e4f48de58f76e3d32a72d5b774251
      url = "GSC1",
      voteCount = 1024
    },
    {
      // 809714cfc4005b1839babb988f8680cc2e6937e747c9d5461d8e065baa1260fb
      address: GSCPiT1JaGv5F8hvsezKJJp69CDC9yvRkCUx,
      // 01f80c03fd0fd06b10768f120cc5911194e35ed4d60195
      url = "GSC2",
      voteCount = 1025
    },
    {
      // 27216755ffd8726184b428971834df395030578461e7b5b3967b68697ca9925c
      // 01f80cebcd9b60d930b603a4fec7d188275c61e1676602
      address: GSCkrAvb8WUZbkfb18jMGU5ZtMwWpaWy8btK,
      url = "GSC3",
      voteCount = 1026
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"

  extraData = "In Us We Trust. 2018/12/25." #2017-8-26 12:00:00
}

witness = {
  # start mining blocks
  # when 'sync.enabled' is true the mining starts when the sync is complete
  # else the mining will start immediately, taking the best block from database
  # (or genesis if no blocks exist yet)
  mining = true

  // Optional.The default is empty.
  // It is used when the witness account has set the witnessPermission.
  // When it is not empty, the localWitnessAccountAddress represents the address of the witness account,
  // and the localwitness is configured with the private key of the witnessPermissionAddress in the witness account.
  // When it is empty,the localwitness is configured with the private key of the witness account.

  // address = 01f80c63ab67ead97e4f48de58f76e3d32a72d5b774251

  privateKey = [
    86721e81012ffc0ac54b0ffb6af4fe6a22ce5eebc89fefd1ca91d0d1f8ef85be
  ]

  # keystore = [
  #   "keystore.json"
  # ]

  # maintenanceTimeInterval = 21600000

  # proposalExpireTime = 259200000

  # extraData = "GSC Foundation"

  # Transaction reference block, default is "latest", configure to "confirmed" can avoid TaPos error
  # trx.referenceBlock = "latest" // latest; confirmed;

  # This property sets the number of milliseconds after the creation of the transaction that is expired, default value is  60000.
  # trx.expirationTimeInMilliseconds = 60000

  # checkFrozenTime
}

vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0

  # In rare cases, transactions that will be within the specified maximum execution time (default 10(ms)) are re-executed and packaged
  # longRunningTime = 10
}
committee = {
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
}